package no.hib.dat152.customTags;

import java.io.IOException;
import java.io.StringWriter;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.SimpleTagSupport;

import org.joda.time.DateTime;

import com.frequal.romannumerals.Converter;

/**
 * Implementasjon av en egendefinert JSP-tag som skal skrive 
 * ut startår (tatt imot som parameter, påkrevd) og nå-år
 * som romertall. Merk at vi bruker et eksternt bibliotek
 * å foreta konverteringen. Om det blir komplikasjoner å 
 * importere JAR-filen, kan den hentes her:
 * http://frequal.com/RomanNumerals/index.html
 * @author Didrik, Lars-Jo, Ståle
 *
 */
public class CopyrightSince extends SimpleTagSupport {
	
	private Integer year;
	
	public void setYear (Integer year) {
		this.year = year;
	}
	
	@Override
	public void doTag() throws JspException, IOException {
		StringWriter stringWriter = new StringWriter();
		JspWriter out = getJspContext().getOut();
		
		getJspBody().invoke(stringWriter);
		
		String result = stringWriter.toString();
		if(year == null || result == null) return;
		
		String constant = "&copy;";
		
		out.print(constant + " " + toRome() + " " + result);
	}

	/**
	 * Konverterer til romertall
	 * @return Resultatstrengen som skal skrives ut på en JSP-side.
	 */
	private String toRome() {
		DateTime dateTime = new DateTime(System.currentTimeMillis());
		Converter converter = new Converter();
		Integer thisYear = dateTime.getYear();
		System.out.println(thisYear.compareTo(year));
		if(thisYear.compareTo(year) == 0)
			return converter.toRomanNumerals(year);
		else if(thisYear.compareTo(year) < 0) {
			Integer tmp = thisYear;
			thisYear = year;
			year = tmp;
		}
		return converter.toRomanNumerals(year) + "-" + converter.toRomanNumerals(thisYear);		
	}
}
