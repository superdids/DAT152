package no.hib.dat152.resource;

import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import no.hib.dat152.models.GenericDAO;
import no.hib.dat152.models.Person;

// Plain old Java Object it does not extend as class or implements 
// an interface

// The class registers its methods for the HTTP GET request using the @GET annotation. 
// Using the @Produces annotation, it defines that it can deliver several MIME types,
// text, XML and HTML. 

// The browser requests per default the HTML MIME type.

//Sets the path to base URL + /hello
@Path("/hello")
public class Hello {


	@Path("get/{id}")
	@GET
	@Consumes(MediaType.TEXT_PLAIN)
	@Produces(MediaType.APPLICATION_JSON)
	public Person doMe(@PathParam("id") Integer id) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("a");
		GenericDAO<Person> dao = new GenericDAO<Person>(emf, Person.class);
		System.out.println("asd");
		Person p = dao.findById(id);
		System.out.println("dsa");
//		return p.getId() + " " + p.getName() + " " + p.getAge();
		System.out.println(p.getId() + " " + p.getName() + " " + p.getAge());
//		Genson g = new Genson();
//		String json = g.serialize(p);
//		System.out.println(json);
		return p;
	}
	
	
	

} 