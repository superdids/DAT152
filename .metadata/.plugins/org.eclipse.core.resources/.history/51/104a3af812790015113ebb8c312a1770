package no.hib.dat152.controllers;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import no.hib.dat102.database.Description;
import no.hib.dat102.database.DescriptionDAOContext;
import no.hib.dat102.database.Product;
import no.hib.dat102.database.ProductDAOContext;
import no.hib.dat152.models.CartItem;
import no.hib.dat152.models.MyAwesomeCart;
import no.hib.dat152.util.RequestHelper;

/**
 * Servlet implementation class Products
 */
@WebServlet("/products")
public class Products extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public Products() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		request = RequestHelper.setLanguage(request);

		String dynamic = (String) request.getSession().getAttribute("language");

		DescriptionDAOContext dao = new DescriptionDAOContext();
		List<Description> descriptions = dao.readAllDescriptionsByLanguageCode(dynamic);
		request.setAttribute("descriptions", descriptions);
	
	print(request);
		request.getRequestDispatcher("/products.jsp").forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		if (request.getParameter("language") != null)
			response = RequestHelper.generateCookie(request, response, "language", "locale");
		else {
			ProductDAOContext dao = new ProductDAOContext();
			List<Product> products = dao.readAll();
			Product p = null;
			String parameter = request.getParameter("item").
			if(products != null) {
				for(Product product : products) 
					if(request.getParameter("p"+product.getProductNumber()) != null) {
						p = product;
						break;
					}
			} else System.out.println("product list is null....");
			if(p != null) request = RequestHelper.updateCart(request, p);
			else System.out.println("product null");
		}
		print(request);
		response.sendRedirect("products");
	}
	
	private void print(HttpServletRequest request) {
		HttpSession session = request.getSession(false);
		if(session != null) {
			MyAwesomeCart cart = (MyAwesomeCart) session.getAttribute("cart");
			if(cart != null) {
				Map<Integer,CartItem> items = cart.getItems();
				CartItem [] ites = {items.get(1), items.get(2)};
				for(CartItem i : ites) 
					if (i != null) System.out.println(i.getProduct().getProductName()+" "+i.getAmount());
			} else { System.out.println("Cart null"); }
		} else {
			System.out.println("Session null");
		}
	}
}
